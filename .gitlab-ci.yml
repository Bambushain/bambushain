.base-cache: 
  variables: 
    CARGO_HOME: $CI_PROJECT_DIR/.cargo
  cache: 
    key: $CI_PROJECT_NAME
    paths: 
      - $CI_PROJECT_DIR/target/
      - $CI_PROJECT_DIR/.cargo/
      - $CI_PROJECT_DIR/Cargo.lock

.base-trunk: 
  extends: 
    - .base-cache
  image: 
    name: harbor.ulbricht.casa/imanuel/trunk-docker-base-image:latest
    pull_policy: always

.base-kaniko: 
  image: 
    name: gcr.io/kaniko-project/executor:debug
    pull_policy: always
    entrypoint: [""]
  before_script: 
    - echo $KANIKO_DOCKERHUB_AND_HARBOR > /kaniko/.docker/config.json

stages: 
  - lint
  - build
  - deploy

lint-backend: 
  stage: lint
  image: 
    name: harbor.ulbricht.casa/base-images/rust-docker-base-image:latest
    pull_policy: always
  extends: 
    - .base-cache
  script: 
    - cargo clippy

lint-frontend: 
  stage: lint
  extends: 
    - .base-trunk
  script: 
    - cd frontend
    - cargo clippy
  artifacts: 
    paths: 
      - dist

build-backend: 
  stage: build
  image: 
    name: harbor.ulbricht.casa/base-images/rust-docker-base-image:latest
    pull_policy: always
  extends: 
    - .base-cache
  script: 
    - cargo build --release
  artifacts: 
    paths: 
      - target/release/bamboo

build-frontend: 
  stage: build
  extends: 
    - .base-trunk
  script: 
    - cd frontend
    - trunk build --release

docker-build: 
  stage: deploy
  extends: 
    - .base-kaniko
  script: 
    - /kaniko/executor
    --context "${CI_PROJECT_DIR}"
    --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
    --destination "harbor.ulbricht.casa/creastina/bamboo:${CI_COMMIT_TAG}"
    --destination "harbor.ulbricht.casa/creastina/bamboo:latest"
  dependencies: 
    - build-backend
    - build-frontend
  rules: 
    - if: $CI_COMMIT_TAG
      exists: 
        - Dockerfile

docker-build-testing: 
  stage: deploy
  extends: 
    - .base-kaniko
  script: 
    - /kaniko/executor
    --context "${CI_PROJECT_DIR}"
    --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
    --destination "harbor.ulbricht.casa/creastina/bamboo:1.5.0-test-$CI_PIPELINE_IID"
  dependencies: 
    - build-backend
    - build-frontend
  rules: 
    - if: $CI_COMMIT_BRANCH == "main"
      exists: 
        - Dockerfile

pages: 
  image: library/node:latest
  stage: deploy
  script: 
    - cp -r docs public
    - echo "/* /index.html 200" > public/_redirects
  artifacts: 
    paths: 
      - public
  rules: 
    - if: $CI_COMMIT_BRANCH == "main"