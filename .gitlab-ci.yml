.base-cargo:
  variables:
    CARGO_HOME: $CI_PROJECT_DIR/.cargo

.base-server-cache:
  image:
    name: registry.ulbricht.casa/docker-images/rust-docker-base-image:latest
    pull_policy: always
  extends:
    - .base-cargo
  cache:
    key: $CI_PROJECT_NAME-$ARCH-server
    paths:
      - $CI_PROJECT_DIR/target/
      - $CI_PROJECT_DIR/.cargo/
      - $CI_PROJECT_DIR/Cargo.lock

.base-web-cache:
  image:
    name: registry.ulbricht.casa/docker-images/trunk-docker-base-image:latest
    pull_policy: always
  extends:
    - .base-cargo
  variables:
    TRUNK_BUILD_RELEASE: "true"
    TRUNK_BUILD_PUBLIC_URL: /static/
    CARGO_PROFILE_RELEASE_PANIC: abort
    CARGO_PROFILE_RELEASE_CODEGEN_UNITS: 1
    CARGO_PROFILE_RELEASE_OPT_LEVEL: z
    CARGO_PROFILE_RELEASE_DEBUG: "false"
    CARGO_PROFILE_RELEASE_LTO: "true"
    CARGO_PROFILE_RELEASE_STRIP: "symbols"
  cache:
    key: $CI_PROJECT_NAME-web
    paths:
      - $CI_PROJECT_DIR/pandas-dist/
      - $CI_PROJECT_DIR/groves-dist/
      - $CI_PROJECT_DIR/target/
      - $CI_PROJECT_DIR/.cargo/
      - $CI_PROJECT_DIR/Cargo.lock

.base-kaniko:
  image:
    name: gcr.io/kaniko-project/executor:debug
    pull_policy: always
    entrypoint: [ "" ]
  before_script:
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"},\"https://index.docker.io/v1/\":{\"auth\":\"$DOCKER_TOKEN\"}}}" > /kaniko/.docker/config.json

stages:
  - lint
  - build
  - deploy

lint-server:
  extends:
    - .base-server-cache
  stage: lint
  script:
    - cargo clippy --release --features pandas-backend --bin pandas-server
  parallel:
    matrix:
      - ARCH: amd64
      - ARCH: arm64
  tags:
    - runner-${ARCH}

lint-web:
  extends:
    - .base-web-cache
  stage: lint
  script:
    - cargo clippy --release --features pandas-frontend --no-default-features --bin pandas-web

build-server:
  stage: build
  extends:
    - .base-server-cache
  script:
    - cargo build --release --bin pandas-server --features pandas-backend
    - mkdir $ARCH
    - cp target/release/pandas-server $ARCH/pandas-server
  needs:
    - lint-server
  artifacts:
    paths:
      - $ARCH/pandas-server
  parallel:
    matrix:
      - ARCH: amd64
      - ARCH: arm64
  tags:
    - runner-${ARCH}

build-web:
  stage: build
  extends:
    - .base-web-cache
  script:
    - trunk build
  needs:
    - lint-web
  parallel:
    matrix:
      # pandas
      - TRUNK_BUILD_TARGET: pandas/frontend/index.html
        TRUNK_BUILD_DIST: dist-pandas
  artifacts:
    paths:
      - dist-pandas

docker-build-pandas:
  stage: deploy
  variables:
    SENTRY_RELEASE: $CI_COMMIT_TAG
  extends:
    - .base-kaniko
  script:
    - /kaniko/executor --context "dir://${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/pandas.${ARCH}.dockerfile" --destination "${CI_REGISTRY_IMAGE}/pandas/${ARCH}:${CI_COMMIT_TAG}" --destination "${CI_REGISTRY_IMAGE}/pandas/${ARCH}:latest"
  needs:
    - build-server
    - build-web
  rules:
    - if: $CI_COMMIT_TAG
  parallel:
    matrix:
      - ARCH: amd64
      - ARCH: arm64
  tags:
    - runner-${ARCH}

docker-build-pandas-testing:
  stage: deploy
  variables:
    SENTRY_RELEASE: $CI_COMMIT_BRANCH
  extends:
    - .base-kaniko
  script:
    - /kaniko/executor --context "dir://${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/pandas.${ARCH}.dockerfile" --destination "${CI_REGISTRY_IMAGE}/pandas/${ARCH}:$CI_PIPELINE_IID-test"
  needs:
    - build-server
    - build-web
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  parallel:
    matrix:
      - ARCH: amd64
      - ARCH: arm64
  tags:
    - runner-${ARCH}

merge-pandas-testing-manifests:
  stage: deploy
  needs:
    - job: docker-build-pandas-testing
      artifacts: false
  image:
    name: mplatform/manifest-tool:alpine
    entrypoint: [""]
  script:
    - >-
      manifest-tool
      --username=${CI_REGISTRY_USER}
      --password=${CI_REGISTRY_PASSWORD}
      push from-args
      --platforms linux/amd64,linux/arm64
      --template ${CI_REGISTRY_IMAGE}/pandas/ARCH:$CI_PIPELINE_IID-test
      --target ${CI_REGISTRY_IMAGE}/pandas:$CI_PIPELINE_IID-test
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

merge-pandas-manifests:
  stage: deploy
  needs:
    - job: docker-build-pandas
      artifacts: false
  image:
    name: mplatform/manifest-tool:alpine
    entrypoint: [""]
  script:
    - >-
      manifest-tool
      --username=${CI_REGISTRY_USER}
      --password=${CI_REGISTRY_PASSWORD}
      push from-args
      --platforms linux/amd64,linux/arm64
      --template ${CI_REGISTRY_IMAGE}/pandas/ARCH:$TAG
      --target ${CI_REGISTRY_IMAGE}/pandas:$TAG
  rules:
    - if: $CI_COMMIT_TAG
  parallel:
    matrix:
      - TAG: $CI_COMMIT_TAG
      - TAG: latest

pages:
  image: library/node:latest
  stage: deploy
  script:
    - cp -r docs public
    - echo "/* /index.html 200" > public/_redirects
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == "main"