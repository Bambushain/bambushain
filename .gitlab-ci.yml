.base-pandas-web-cache:
  variables:
    CARGO_HOME: $CI_PROJECT_DIR/.cargo
  cache:
    key: $CI_PROJECT_NAME-pandas-web
    paths:
      - $CI_PROJECT_DIR/pandas/dist/
      - $CI_PROJECT_DIR/pandas/target/
      - $CI_PROJECT_DIR/.cargo/
      - $CI_PROJECT_DIR/pandas/Cargo.lock

.base-pandas-server-cache:
  variables:
    CARGO_HOME: $CI_PROJECT_DIR/.cargo
  cache:
    key: $CI_PROJECT_NAME-pandas-server
    paths:
      - $CI_PROJECT_DIR/pandas/target/
      - $CI_PROJECT_DIR/.cargo/
      - $CI_PROJECT_DIR/pandas/Cargo.lock

.base-groves-web-cache:
  variables:
    CARGO_HOME: $CI_PROJECT_DIR/.cargo
  cache:
    key: $CI_PROJECT_NAME-groves-web
    paths:
      - $CI_PROJECT_DIR/groves/dist/
      - $CI_PROJECT_DIR/groves/target/
      - $CI_PROJECT_DIR/.cargo/
      - $CI_PROJECT_DIR/groves/Cargo.lock

.base-pandas-groves-cache:
  variables:
    CARGO_HOME: $CI_PROJECT_DIR/.cargo
  cache:
    key: $CI_PROJECT_NAME-groves-server
    paths:
      - $CI_PROJECT_DIR/groves/target/
      - $CI_PROJECT_DIR/.cargo/
      - $CI_PROJECT_DIR/groves/Cargo.lock

.base-common-cache:
  variables:
    CARGO_HOME: $CI_PROJECT_DIR/.cargo
  cache:
    key: $CI_PROJECT_NAME-common
    paths:
      - $CI_PROJECT_DIR/common/target/
      - $CI_PROJECT_DIR/.cargo/
      - $CI_PROJECT_DIR/common/Cargo.lock

.base-trunk:
  image:
    name: registry.ulbricht.casa/docker-images/trunk-docker-base-image:latest
    pull_policy: always

.base-kaniko:
  image:
    name: gcr.io/kaniko-project/executor:debug
    pull_policy: always
    entrypoint: [ "" ]
  before_script:
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"},\"https://index.docker.io/v1/\":{\"auth\":\"$DOCKER_TOKEN\"}}}" > /kaniko/.docker/config.json

stages:
  - lint
  - build
  - deploy

lint-common:
  stage: lint
  image:
    name: registry.ulbricht.casa/docker-images/rust-docker-base-image:latest
    pull_policy: always
  extends:
    - .base-common-cache
  script:
    - cd common
    - cargo clippy --release

lint-pandas:
  stage: lint
  extends:
    - .base-trunk
    - .base-pandas-web-cache
  needs:
    - lint-common
  script:
    - cd pandas
    - cargo clippy --release

lint-groves:
  stage: lint
  extends:
    - .base-trunk
    - .base-groves-web-cache
  needs:
    - lint-common
  script:
    - cd groves
    - cargo clippy --release

build-pandas-server:
  stage: build
  image:
    name: registry.ulbricht.casa/docker-images/rust-docker-base-image:latest
    pull_policy: always
  extends:
    - .base-pandas-server-cache
  script:
    - cd pandas
    - cargo build --release --bin pandas-server --features backend
  needs:
    - lint-pandas
  artifacts:
    paths:
      - pandas/target/release/pandas-server

build-pandas-web:
  stage: build
  extends:
    - .base-trunk
    - .base-pandas-web-cache
  script:
    - cd pandas
    - trunk build --release
  needs:
    - lint-pandas
  artifacts:
    paths:
      - pandas/dist

build-groves-server:
  stage: build
  image:
    name: registry.ulbricht.casa/docker-images/rust-docker-base-image:latest
    pull_policy: always
  extends:
    - .base-groves-server-cache
  script:
    - cd groves
    - cargo build --release --bin groves-server --features backend
  needs:
    - lint-pandas
  artifacts:
    paths:
      - groves/target/release/groves-server

build-groves-web:
  stage: build
  extends:
    - .base-trunk
    - .base-groves-web-cache
  script:
    - cd groves
    - trunk build --release
  needs:
    - lint-groves
  artifacts:
    paths:
      - groves/dist

docker-build-pandas:
  stage: deploy
  variables:
    SENTRY_RELEASE: $CI_COMMIT_TAG
  extends:
    - .base-kaniko
  script:
    - /kaniko/executor --context "dir://${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/pandas.dockerfile" --destination "${CI_REGISTRY_IMAGE}/pandas:${CI_COMMIT_TAG}" --destination "${CI_REGISTRY_IMAGE}:latest"
  needs:
    - build-pandas-server
    - build-pandas-web
  rules:
    - if: $CI_COMMIT_TAG
      exists:
        - Dockerfile

docker-build-pandas-testing:
  stage: deploy
  variables:
    SENTRY_RELEASE: $CI_COMMIT_BRANCH
  extends:
    - .base-kaniko
  script:
    - /kaniko/executor --context "dir://${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/pandas.dockerfile" --destination "${CI_REGISTRY_IMAGE}/pandas:2.0.0-test-$CI_PIPELINE_IID"
  needs:
    - build-pandas-server
    - build-pandas-web
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      exists:
        - Dockerfile

docker-build-groves:
  stage: deploy
  variables:
    SENTRY_RELEASE: $CI_COMMIT_TAG
  extends:
    - .base-kaniko
  script:
    - /kaniko/executor --context "dir://${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/groves.dockerfile" --destination "${CI_REGISTRY_IMAGE}/groves:${CI_COMMIT_TAG}" --destination "${CI_REGISTRY_IMAGE}:latest"
  needs:
    - build-groves-server
    - build-groves-web
  rules:
    - if: $CI_COMMIT_TAG
      exists:
        - Dockerfile

docker-build-groves-testing:
  stage: deploy
  variables:
    SENTRY_RELEASE: $CI_COMMIT_BRANCH
  extends:
    - .base-kaniko
  script:
    - /kaniko/executor --context "dir://${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/groves.dockerfile" --destination "${CI_REGISTRY_IMAGE}/groves:2.0.0-test-$CI_PIPELINE_IID"
  needs:
    - build-groves-server
    - build-groves-web
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      exists:
        - Dockerfile

pages:
  image: library/node:latest
  stage: deploy
  script:
    - cp -r docs public
    - echo "/* /index.html 200" > public/_redirects
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == "main"