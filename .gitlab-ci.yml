.base-frontend-cache:
  variables:
    CARGO_HOME: $CI_PROJECT_DIR/.cargo
  cache:
    key: $CI_PROJECT_NAME-pandas-frontend
    paths:
      - $CI_PROJECT_DIR/pandas/dist/
      - $CI_PROJECT_DIR/pandas/target/
      - $CI_PROJECT_DIR/.cargo/
      - $CI_PROJECT_DIR/pandas/Cargo.lock

.base-backend-cache:
  variables:
    CARGO_HOME: $CI_PROJECT_DIR/.cargo
  cache:
    key: $CI_PROJECT_NAME-pandas-backend
    paths:
      - $CI_PROJECT_DIR/pandas/target/
      - $CI_PROJECT_DIR/.cargo/
      - $CI_PROJECT_DIR/pandas/Cargo.lock

.base-trunk:
  extends:
    - .base-frontend-cache
  image:
    name: registry.ulbricht.casa/docker-images/trunk-docker-base-image:latest
    pull_policy: always

.base-kaniko:
  image:
    name: gcr.io/kaniko-project/executor:debug
    pull_policy: always
    entrypoint: [ "" ]
  before_script:
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"},\"https://index.docker.io/v1/\":{\"auth\":\"$DOCKER_TOKEN\"}}}" > /kaniko/.docker/config.json

stages:
  - lint
  - build
  - deploy

lint-backend:
  stage: lint
  image:
    name: registry.ulbricht.casa/docker-images/rust-docker-base-image:latest
    pull_policy: always
  extends:
    - .base-backend-cache
  script:
    - cargo clippy --release

lint-frontend:
  stage: lint
  extends:
    - .base-trunk
  script:
    - cd frontend
    - cargo clippy --release
  artifacts:
    paths:
      - dist

build-backend:
  stage: build
  image:
    name: registry.ulbricht.casa/docker-images/rust-docker-base-image:latest
    pull_policy: always
  extends:
    - .base-backend-cache
  script:
    - cargo build --release
  needs:
    - lint-backend
  artifacts:
    paths:
      - target/release/bamboo

build-frontend:
  stage: build
  extends:
    - .base-trunk
  script:
    - cd frontend
    - trunk build --release
  needs:
    - lint-frontend
  artifacts:
    paths:
      - dist

docker-build:
  stage: deploy
  variables:
    SENTRY_RELEASE: $CI_COMMIT_TAG
  extends:
    - .base-kaniko
  script:
    - /kaniko/executor --context "dir://${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/pandas.dockerfile" --destination "${CI_REGISTRY_IMAGE}/pandas:${CI_COMMIT_TAG}" --destination "${CI_REGISTRY_IMAGE}:latest"
  needs:
    - build-backend
    - build-frontend
  rules:
    - if: $CI_COMMIT_TAG
      exists:
        - Dockerfile

docker-build-testing:
  stage: deploy
  variables:
    SENTRY_RELEASE: $CI_COMMIT_BRANCH
  extends:
    - .base-kaniko
  script:
    - /kaniko/executor --context "dir://${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/pandas.dockerfile" --destination "${CI_REGISTRY_IMAGE}/pandas:2.0.0-test-$CI_PIPELINE_IID"
  needs:
    - build-backend
    - build-frontend
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      exists:
        - Dockerfile

pages:
  image: library/node:latest
  stage: deploy
  script:
    - cp -r docs public
    - echo "/* /index.html 200" > public/_redirects
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == "main"