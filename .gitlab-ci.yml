.base-cargo:
  variables:
    CARGO_HOME: $CI_PROJECT_DIR/.cargo

.base-server-cache:
  image:
    name: registry.ulbricht.casa/docker-images/rust-docker-base-image:latest
    pull_policy: always
  extends:
    - .base-cargo
  cache:
    key: $CI_PROJECT_NAME-$ARCH-server
    paths:
      - $CI_PROJECT_DIR/target/
      - $CI_PROJECT_DIR/.cargo/
      - $CI_PROJECT_DIR/Cargo.lock

.base-web-cache:
  image:
    name: registry.ulbricht.casa/docker-images/trunk-docker-base-image:latest
    pull_policy: always
  extends:
    - .base-cargo
  variables:
    TRUNK_BUILD_RELEASE: "true"
    TRUNK_BUILD_PUBLIC_URL: /static/
    CARGO_PROFILE_RELEASE_PANIC: abort
    CARGO_PROFILE_RELEASE_CODEGEN_UNITS: 1
    CARGO_PROFILE_RELEASE_OPT_LEVEL: z
    CARGO_PROFILE_RELEASE_DEBUG: "false"
    CARGO_PROFILE_RELEASE_LTO: "true"
    CARGO_PROFILE_RELEASE_STRIP: "symbols"
  cache:
    key: $CI_PROJECT_NAME-web
    paths:
      - $CI_PROJECT_DIR/pandas-dist/
      - $CI_PROJECT_DIR/groves-dist/
      - $CI_PROJECT_DIR/target/
      - $CI_PROJECT_DIR/.cargo/
      - $CI_PROJECT_DIR/Cargo.lock

.base-kaniko:
  image:
    name: gcr.io/kaniko-project/executor:debug
    pull_policy: always
    entrypoint: [ "" ]
  before_script:
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"},\"https://index.docker.io/v1/\":{\"auth\":\"$DOCKER_TOKEN\"}}}" > /kaniko/.docker/config.json

stages:
  - lint
  - build
  - deploy

lint-backend:
  extends:
    - .base-server-cache
  stage: lint
  script:
    - cargo clippy --release --features backend-api --features backend-events --features backend-mailer --features backend-pandas --bin backend-api --bin backend-events --bin backend-mailer --bin backend-pandas
  parallel:
    matrix:
      - ARCH: amd64
      - ARCH: arm64
  tags:
    - runner-${ARCH}

lint-web:
  extends:
    - .base-web-cache
  stage: lint
  script:
    - cargo clippy --release --features frontend-pandas --no-default-features --bin frontend-pandas

docker-build:
  stage: deploy
  extends:
    - .base-kaniko
  script:
    - /kaniko/executor --context "dir://${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/docker/${APP}.dockerfile" --destination "${CI_REGISTRY_IMAGE}/${APP}/${ARCH}:${CI_COMMIT_TAG}" --destination "${CI_REGISTRY_IMAGE}/${APP}/${ARCH}:latest"
  rules:
    - if: $CI_COMMIT_TAG
  parallel:
    matrix:
      - ARCH:
          - amd64
          - arm64
      - APP:
          - pandas
          - mailer
          - api
          - events
  tags:
    - runner-${ARCH}

docker-build-testing:
  stage: deploy
  extends:
    - .base-kaniko
  script:
    - /kaniko/executor --context "dir://${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/docker/${APP}.dockerfile" --destination "${CI_REGISTRY_IMAGE}/${APP}:$CI_PIPELINE_IID-test"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  parallel:
    matrix:
      - ARCH:
          - amd64
          - arm64
      - APP:
          - pandas
          - mailer
          - api
          - events
  tags:
    - runner-${ARCH}

merge-manifests:
  stage: deploy
  needs:
    - job: docker-build
      artifacts: false
  image:
    name: mplatform/manifest-tool:alpine
    entrypoint: [ "" ]
  script:
    - >-
      manifest-tool
      --username=${CI_REGISTRY_USER}
      --password=${CI_REGISTRY_PASSWORD}
      push from-args
      --platforms linux/amd64,linux/arm64
      --template ${CI_REGISTRY_IMAGE}/${APP}/ARCH:$TAG
      --target ${CI_REGISTRY_IMAGE}/${APP}:$TAG
  rules:
    - if: $CI_COMMIT_TAG
  parallel:
    matrix:
      - TAG:
          - $CI_COMMIT_TAG
          - latest
      - APP:
          - pandas
          - mailer
          - api
          - events

merge-testing-manifests:
  stage: deploy
  needs:
    - job: docker-build-testing
      artifacts: false
  image:
    name: mplatform/manifest-tool:alpine
    entrypoint: [ "" ]
  script:
    - >-
      manifest-tool
      --username=${CI_REGISTRY_USER}
      --password=${CI_REGISTRY_PASSWORD}
      push from-args
      --platforms linux/amd64,linux/arm64
      --template ${CI_REGISTRY_IMAGE}/${APP}/ARCH:$CI_PIPELINE_IID-test
      --target ${CI_REGISTRY_IMAGE}/${APP}:$CI_PIPELINE_IID-test
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  parallel:
    matrix:
      - APP:
          - pandas
          - mailer
          - api
          - events

pages:
  image: library/node:latest
  stage: deploy
  script:
    - cp -r docs public
    - echo "/* /index.html 200" > public/_redirects
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == "main"