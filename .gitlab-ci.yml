.base-cargo:
  variables:
    CARGO_HOME: $CI_PROJECT_DIR/.cargo

.base-server-cache:
  image:
    name: registry.ulbricht.casa/docker-images/rust-docker-base-image:latest
    pull_policy: always
  extends:
    - .base-cargo
  cache:
    key: $CI_PROJECT_NAME-server
    paths:
      - $CI_PROJECT_DIR/target/
      - $CI_PROJECT_DIR/.cargo/
      - $CI_PROJECT_DIR/Cargo.lock

.base-web-cache:
  image:
    name: registry.ulbricht.casa/docker-images/trunk-docker-base-image:latest
    pull_policy: always
  extends:
    - .base-cargo
  variables:
    TRUNK_BUILD_RELEASE: "true"
    TRUNK_BUILD_PUBLIC_URL: /static/
    CARGO_PROFILE_RELEASE_PANIC: abort
    CARGO_PROFILE_RELEASE_CODEGEN_UNITS: abort
    CARGO_PROFILE_RELEASE_OPT_LEVEL: z
    CARGO_PROFILE_RELEASE_DEBUG: "false"
    CARGO_PROFILE_RELEASE_LTO: "true"
    CARGO_PROFILE_RELEASE_STRIP: "symbols"
  cache:
    key: $CI_PROJECT_NAME-pandas-web
    paths:
      - $CI_PROJECT_DIR/pandas-dist/
      - $CI_PROJECT_DIR/target/
      - $CI_PROJECT_DIR/.cargo/
      - $CI_PROJECT_DIR/Cargo.lock

.base-kaniko:
  image:
    name: gcr.io/kaniko-project/executor:debug
    pull_policy: always
    entrypoint: [ "" ]
  before_script:
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"},\"https://index.docker.io/v1/\":{\"auth\":\"$DOCKER_TOKEN\"}}}" > /kaniko/.docker/config.json

stages:
  - lint
  - build
  - deploy

lint-server:
  extends:
    - .base-server-cache
  stage: lint
  script:
    - cargo clippy --release --features groves-backend --features pandas-backend --bin groves-server --bin pandas-server

lint-web:
  extends:
    - .base-web-cache
  stage: lint
  script:
    - cargo clippy --release --features groves-frontend --features pandas-frontend --no-default-features --bin groves-web --bin pandas-web

build-server:
  stage: build
  extends:
    - .base-server-cache
  script:
    - cargo build --release --bin pandas-server --bin groves-server --features pandas-backend --features groves-backend
  needs:
    - lint-server
  artifacts:
    paths:
      - target/release/pandas-server
      - target/release/groves-server

build-web:
  stage: build
  extends:
    - .base-web-cache
  script:
    - trunk build
  needs:
    - lint-web
  parallel:
    matrix:
      # groves
      - TRUNK_BUILD_TARGET: groves/frontend/index.html
        TRUNK_BUILD_DIST: dist-groves
      # pandas
      - TRUNK_BUILD_TARGET: pandas/frontend/index.html
        TRUNK_BUILD_DIST: dist-pandas
  artifacts:
    paths:
      - dist-pandas
      - dist-groves

docker-build-pandas:
  stage: deploy
  variables:
    SENTRY_RELEASE: $CI_COMMIT_TAG
  extends:
    - .base-kaniko
  script:
    - /kaniko/executor --context "dir://${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/pandas.dockerfile" --destination "${CI_REGISTRY_IMAGE}/pandas:${CI_COMMIT_TAG}" --destination "${CI_REGISTRY_IMAGE}:latest"
  needs:
    - build-server
    - build-web
  rules:
    - if: $CI_COMMIT_TAG

docker-build-pandas-testing:
  stage: deploy
  variables:
    SENTRY_RELEASE: $CI_COMMIT_BRANCH
  extends:
    - .base-kaniko
  script:
    - /kaniko/executor --context "dir://${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/pandas.dockerfile" --destination "${CI_REGISTRY_IMAGE}/pandas:2.0.0-test-$CI_PIPELINE_IID"
  needs:
    - build-server
    - build-web
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

docker-build-groves:
  stage: deploy
  extends:
    - .base-kaniko
  script:
    - /kaniko/executor --context "dir://${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/groves.dockerfile" --destination "${CI_REGISTRY_IMAGE}/groves:${CI_COMMIT_TAG}" --destination "${CI_REGISTRY_IMAGE}:latest"
  needs:
    - build-server
    - build-web
  rules:
    - if: $CI_COMMIT_TAG

docker-build-groves-testing:
  stage: deploy
  extends:
    - .base-kaniko
  script:
    - /kaniko/executor --context "dir://${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/groves.dockerfile" --destination "${CI_REGISTRY_IMAGE}/groves:2.0.0-test-$CI_PIPELINE_IID"
  needs:
    - build-server
    - build-web
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

pages:
  image: library/node:latest
  stage: deploy
  script:
    - cp -r docs public
    - echo "/* /index.html 200" > public/_redirects
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == "main"